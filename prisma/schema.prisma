// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        Int             @id @default(autoincrement())
  name      String          @unique
  email     String?
  password  String?
  image     String?         @db.Text
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  projects  ProjectOnUser[]
}

model Project {
  id    Int    @id @default(autoincrement())
  title String
  // repo url

  duration_start DateTime        @db.Timetz()
  duration_end   DateTime        @db.Timetz()
  total_hours    Int
  users          ProjectOnUser[]
}

model ProjectOnUser {
  id         Int         @id @default(autoincrement())
  project    Project     @relation(fields: [projectId], references: [id])
  projectId  Int
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  assignedAt DateTime    @default(now()) @db.Timestamptz()
  assignedBy String
  timeStates TimeState[]

  @@index([projectId, userId])
}

model TimeState {
  id              Int           @id @default(autoincrement())
  time_start      DateTime      @db.Timetz() // ここから1時間のみ
  status          String
  createdAt       DateTime      @default(now()) @db.Timestamptz()
  userproject     ProjectOnUser @relation(fields: [projectOnUserId], references: [id])
  projectOnUserId Int

  @@index([projectOnUserId])
}
